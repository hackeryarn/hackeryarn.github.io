<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hy on hackeryarn</title>
    <link>https://hackeryarn.com/categories/hy/</link>
    <description>Recent content in Hy on hackeryarn</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Mar 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hackeryarn.com/categories/hy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django With Hy</title>
      <link>https://hackeryarn.com/post/hy-django/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://hackeryarn.com/post/hy-django/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://docs.hylang.org/en/stable/&#34;&gt;Hy&lt;/a&gt; introduces a List that gives you all the power of macros and the elegant Lisp&#xA;syntax while enabling the full power of Python.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Although it&amp;#39;s easy enough to use Python libraries in Hy, you just import&#xA;them as you would in Python, I was weary of using a full framework outside it&amp;#39;s&#xA;native language. To prove out this concept, I followed &lt;a href=&#34;https://docs.djangoproject.com/en/3.0/intro/tutorial01/&#34;&gt;the official django&#xA;tutorial&lt;/a&gt; using Hy.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;To my surprise I only ran into minor issues. The rest of the project worked&#xA;flawlessly.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
